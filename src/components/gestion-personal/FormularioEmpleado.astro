---
// src/components/gestion-personal/FormularioEmpleado.astro
import "../../styles/global.css";

interface DepartamentoOption {
  value: string;
  label: string;
  icon: string;
}

const departamentos: DepartamentoOption[] = [
  { value: 'secundaria', label: 'Secundaria', icon: 'üè´' },
  { value: 'primaria', label: 'Primaria', icon: 'üìö' },
  { value: 'administracion', label: 'Administraci√≥n', icon: 'üíº' }
];

const camposRequeridos = ['nombre', 'cargo', 'departamento', 'fechaIngreso'];
---

<div class="fixed inset-0 bg-gray-900/50 backdrop-blur-sm overflow-y-auto h-full w-full flex items-center justify-center" id="modal">
  <div class="relative w-full max-w-2xl mx-4">
    <!-- Card del formulario -->
    <div class="bg-white rounded-xl shadow-2xl">
      <!-- Header -->
      <div class="px-6 py-4 border-b border-gray-100 flex justify-between items-center">
        <div class="flex items-center gap-3">
          <div class="bg-blue-50 p-2 rounded-lg">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-500" viewBox="0 0 20 20" fill="currentColor">
              <path d="M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6z" />
            </svg>
          </div>
          <h3 class="text-lg font-semibold text-gray-900">Nuevo Empleado</h3>
        </div>
        <button id="btnCerrar" class="text-gray-400 hover:text-gray-500 transition-colors">
          <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </button>
      </div>

      <!-- Contenido del formulario -->
      <form id="empleadoForm" class="p-6">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <!-- Campo Nombre -->
          <div class="col-span-2">
            <label class="block text-sm font-medium text-gray-700 mb-1">Nombre Completo</label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                  <path d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" />
                </svg>
              </div>
              <input
                type="text"
                name="nombre"
                required
                class="pl-10 w-full rounded-lg border border-gray-300 bg-white py-2 px-3 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
                placeholder="Ingrese el nombre completo"
              />
            </div>
          </div>

          <!-- Campo Cargo -->
          <div class="col-span-2 md:col-span-1">
            <label class="block text-sm font-medium text-gray-700 mb-1">Cargo</label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v3.57A22.952 22.952 0 0110 13a22.95 22.95 0 01-8-1.43V8a2 2 0 012-2h2zm2-1a1 1 0 011-1h2a1 1 0 011 1v1H8V5zm1 5a1 1 0 011-1h.01a1 1 0 110 2H10a1 1 0 01-1-1z" clip-rule="evenodd" />
                </svg>
              </div>
              <input
                type="text"
                name="cargo"
                required
                class="pl-10 w-full rounded-lg border border-gray-300 bg-white py-2 px-3 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
                placeholder="Ingrese el cargo"
              />
            </div>
          </div>

          <!-- Campo Departamento -->
          <div class="col-span-2 md:col-span-1">
            <label class="block text-sm font-medium text-gray-700 mb-1">Departamento</label>
            <select 
              name="departamento" 
              required
              class="w-full rounded-lg border border-gray-300 bg-white py-2 px-3 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
            >
              <option value="">Seleccione un departamento</option>
              {departamentos.map(dep => (
                <option value={dep.value}>{dep.icon} {dep.label}</option>
              ))}
            </select>
          </div>

          <!-- Campo Fecha de Ingreso -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Fecha de Ingreso</label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <svg class="h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                </svg>
              </div>
              <input
                type="date"
                name="fechaIngreso"
                required
                class="pl-10 w-full rounded-lg border border-gray-300 bg-white py-2 px-3 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
              />
            </div>
          </div>

          <!-- Campo Salario -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Salario</label>
            <div class="relative">
              <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <span class="text-gray-500">$</span>
              </div>
              <input
                type="number"
                name="salario"
                min="0"
                step="100"
                class="pl-8 w-full rounded-lg border border-gray-300 bg-white py-2 px-3 shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
                placeholder="0.00"
              />
            </div>
          </div>
        </div>

        <!-- Botones de acci√≥n -->
        <div class="mt-6 flex items-center justify-end gap-x-4">
          <button
            type="button"
            id="btnCancelar"
            class="rounded-lg px-4 py-2 text-sm font-semibold text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
          >
            Cancelar
          </button>
          <button
            type="submit"
            class="rounded-lg bg-blue-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
          >
            Guardar Empleado
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('empleadoForm') as HTMLFormElement;
    const modal = document.getElementById('modal');
    const btnCancelar = document.getElementById('btnCancelar');
    const btnCerrar = document.getElementById('btnCerrar');

    // Funci√≥n para cerrar el modal
    const cerrarModal = () => {
      modal?.classList.add('hidden');
      form?.reset();
    };

    // Manejador del formulario
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      try {
        const formData = new FormData(form);
        const datos = Object.fromEntries(formData);
        
        // Simular guardado
        await new Promise(resolve => setTimeout(resolve, 1000));
        console.log('Datos del empleado:', datos);
        
        // Mostrar mensaje de √©xito
        alert('Empleado guardado exitosamente');
        cerrarModal();
      } catch (error) {
        console.error('Error al guardar:', error);
        alert('Error al guardar el empleado');
      }
    });

    // Manejadores para cerrar el modal
    btnCancelar?.addEventListener('click', cerrarModal);
    btnCerrar?.addEventListener('click', cerrarModal);

    // Cerrar modal con ESC
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') cerrarModal();
    });
  });
</script>